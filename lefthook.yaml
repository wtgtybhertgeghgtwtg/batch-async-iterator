commit-msg:
  commands:
    # Check that the commit message is in the proper format.
    commitlint:
      run: 'commitlint --extends @commitlint/config-conventional --edit $1'

pre-commit:
  commands:
    # Format the changed files (in sequence).
    format:
      run: 'LEFTHOOK_QUIET=meta,success lefthook run pre-commit-format'
    # Run tests related to the changes.
    test:
      glob: '*.{cjs,ts}'
      run: 'jest  --bail --findRelatedTests {staged_files} --passWithNoTests'
    spellcheck:
      run: 'cspell "**"'
    # Typecheck everything.
    typecheck:
      run: 'tsc'
  parallel: true

pre-commit-format:
  commands:
    # Lint and potentially fix changed files.
    eslint:
      glob: '*.{cjs,ts}'
      run: 'eslint --fix {staged_files} && git add {staged_files}'
    # Run Prettier on changed files.
    prettier:
      glob: '*.{cjs,json,md,ts,yaml}'
      run: 'prettier --write {staged_files} && git add {staged_files}'
